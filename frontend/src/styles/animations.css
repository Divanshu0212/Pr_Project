/* src/styles/animations.css - Optimized Version */

:root {
  --transition-fast: 0.25s ease-in-out;
  --transition-normal: 0.4s ease-in-out;
  --transition-slow: 0.6s ease-in-out;
  --transition-spring: 0.6s cubic-bezier(0.16, 1, 0.3, 1);
  --hover-shadow-light: 0 10px 20px rgba(var(--color-text-primary), 0.08);
  --hover-shadow-dark: 0 10px 20px rgba(0, 0, 0, 0.4);
  --scroll-threshold: 0.1; /* How much of element needs to be visible */
}

/* Performance optimizations */
.animate-gpu {
  transform: translateZ(0);
  will-change: transform, opacity;
}

.animate-gpu-auto {
  will-change: auto;
}

/* --- 1. Page Transitions --- */
.page-enter {
  opacity: 0;
  transform: translateY(20px) translateZ(0);
}
.page-enter-active {
  opacity: 1;
  transform: translateY(0) translateZ(0);
  transition: opacity 0.6s cubic-bezier(0.16, 1, 0.3, 1), transform 0.6s cubic-bezier(0.16, 1, 0.3, 1);
}
.page-exit {
  opacity: 1;
  transform: translateY(0) translateZ(0);
}
.page-exit-active {
  opacity: 0;
  transform: translateY(-20px) translateZ(0);
  transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out;
}

/* --- 2. Scroll-triggered Animations with Replay Capability --- */

/* Base scroll reveal (slide up) */
.scroll-reveal {
  opacity: 0;
  transform: translateY(30px) translateZ(0);
  transition: opacity 0.8s var(--transition-spring), transform 0.8s var(--transition-spring);
  will-change: transform, opacity;
}
.scroll-reveal.animate, .scroll-reveal.visible { /* .animate for general, .visible for IntersectionObserver */
  opacity: 1;
  transform: translateY(0) translateZ(0);
}
.scroll-reveal.animate-out { /* For when element scrolls out of view */
  opacity: 0.3;
  transform: translateY(15px) translateZ(0);
}

/* Specific scroll reveal directions/effects */
.scroll-reveal-left {
  opacity: 0;
  transform: translateX(-40px) translateZ(0);
  transition: opacity 0.8s var(--transition-spring), transform 0.8s var(--transition-spring);
  will-change: transform, opacity;
}
.scroll-reveal-left.animate {
  opacity: 1;
  transform: translateX(0) translateZ(0);
}
.scroll-reveal-left.animate-out {
  opacity: 0.3;
  transform: translateX(-20px) translateZ(0);
}

.scroll-reveal-right {
  opacity: 0;
  transform: translateX(40px) translateZ(0);
  transition: opacity 0.8s var(--transition-spring), transform 0.8s var(--transition-spring);
  will-change: transform, opacity;
}
.scroll-reveal-right.animate {
  opacity: 1;
  transform: translateX(0) translateZ(0);
}
.scroll-reveal-right.animate-out {
  opacity: 0.3;
  transform: translateX(20px) translateZ(0);
}

.scroll-reveal-scale {
  opacity: 0;
  transform: scale(0.9) translateZ(0);
  transition: opacity 0.8s var(--transition-spring), transform 0.8s var(--transition-spring);
  will-change: transform, opacity;
}
.scroll-reveal-scale.animate {
  opacity: 1;
  transform: scale(1) translateZ(0);
}
.scroll-reveal-scale.animate-out {
  opacity: 0.3;
  transform: scale(0.95) translateZ(0);
}

.scroll-reveal-rotate {
  opacity: 0;
  transform: rotateY(45deg) translateZ(0);
  transition: opacity 0.8s var(--transition-spring), transform 0.8s var(--transition-spring);
  will-change: transform, opacity;
}
.scroll-reveal-rotate.animate {
  opacity: 1;
  transform: rotateY(0deg) translateZ(0);
}
.scroll-reveal-rotate.animate-out {
  opacity: 0.3;
  transform: rotateY(22.5deg) translateZ(0);
}

.scroll-reveal-flip {
  opacity: 0;
  transform: rotateX(90deg) translateZ(0);
  transition: opacity 0.8s var(--transition-spring), transform 0.8s var(--transition-spring);
  will-change: transform, opacity;
}
.scroll-reveal-flip.animate {
  opacity: 1;
  transform: rotateX(0deg) translateZ(0);
}
.scroll-reveal-flip.animate-out {
  opacity: 0.3;
  transform: rotateX(45deg) translateZ(0);
}

.scroll-reveal-zoom {
  opacity: 0;
  transform: scale(0.5) translateZ(0);
  transition: opacity 0.8s var(--transition-spring), transform 0.8s var(--transition-spring);
  will-change: transform, opacity;
}
.scroll-reveal-zoom.animate {
  opacity: 1;
  transform: scale(1) translateZ(0);
}
.scroll-reveal-zoom.animate-out {
  opacity: 0.3;
  transform: scale(0.8) translateZ(0);
}

/* Parallax scroll effects */
.scroll-parallax {
  transition: transform 0.1s linear;
  will-change: transform;
}
.scroll-parallax-slow {
  transition: transform 0.2s linear;
  will-change: transform;
}
.scroll-parallax-fast {
  transition: transform 0.05s linear;
  will-change: transform;
}

/* Staggered animations with enhanced delays */
.scroll-reveal-delay-0 { transition-delay: 0s; }
.scroll-reveal-delay-100 { transition-delay: 0.1s; }
.scroll-reveal-delay-150 { transition-delay: 0.15s; } /* Specific for steps/benefits */
.scroll-reveal-delay-200 { transition-delay: 0.2s; }
.scroll-reveal-delay-300 { transition-delay: 0.3s; }
.scroll-reveal-delay-400 { transition-delay: 0.4s; }
.scroll-reveal-delay-500 { transition-delay: 0.5s; }
.scroll-reveal-delay-600 { transition-delay: 0.6s; }
.scroll-reveal-delay-700 { transition-delay: 0.7s; }
.scroll-reveal-delay-800 { transition-delay: 0.8s; }
.scroll-reveal-delay-900 { animation-delay: 0.9s; } /* Added for AtsHome specific need */

/* Progressive reveal for lists */
.scroll-reveal-stagger > * {
  opacity: 0;
  transform: translateY(20px) translateZ(0);
  transition: opacity 0.6s var(--transition-spring), transform 0.6s var(--transition-spring);
  will-change: transform, opacity;
}
.scroll-reveal-stagger.animate > *:nth-child(1) { transition-delay: 0.1s; }
.scroll-reveal-stagger.animate > *:nth-child(2) { transition-delay: 0.2s; }
.scroll-reveal-stagger.animate > *:nth-child(3) { transition-delay: 0.3s; }
.scroll-reveal-stagger.animate > *:nth-child(4) { transition-delay: 0.4s; }
.scroll-reveal-stagger.animate > *:nth-child(5) { transition-delay: 0.5s; }
.scroll-reveal-stagger.animate > *:nth-child(6) { transition-delay: 0.6s; }
.scroll-reveal-stagger.animate > *:nth-child(7) { transition-delay: 0.7s; }
.scroll-reveal-stagger.animate > *:nth-child(8) { transition-delay: 0.8s; }
.scroll-reveal-stagger.animate > * {
  opacity: 1;
  transform: translateY(0) translateZ(0);
}

/* --- 3. Text Animations --- */

@keyframes typewriter {
  from { width: 0; }
  to { width: 100%; }
}
@keyframes blink-caret {
  from, to { border-color: transparent; }
  50% { border-color: rgb(var(--color-accent-primary)); }
}
.typewriter {
  overflow: hidden;
  border-right: 2px solid rgb(var(--color-accent-primary));
  white-space: nowrap;
  animation: typewriter 3s steps(40, end), blink-caret 0.75s step-end infinite;
}
.typewriter-replay {
  overflow: hidden;
  border-right: 2px solid rgb(var(--color-accent-primary));
  white-space: nowrap;
  width: 0;
  transition: width 2s steps(40, end);
}
.typewriter-replay.animate {
  width: 100%;
}

/* Gradient text animations */
@keyframes gradientShift { /* Main gradient shift for text */
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}
@keyframes gradientX { /* Also a horizontal gradient shift, kept for different duration needs */
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}
@keyframes gradientXY {
  0%, 100% { background-position: 0% 50%; }
  25% { background-position: 100% 50%; }
  50% { background-position: 100% 100%; }
  75% { background-position: 0% 100%; }
}
@keyframes gradientSlow { /* General slow gradient, could potentially be merged with gradientShift/X */
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}
@keyframes gradientRotate {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

.gradient-text {
  background: linear-gradient(
    45deg,
    rgb(var(--color-accent-primary)),
    rgb(var(--color-accent-secondary)),
    rgb(var(--color-accent-primary))
  );
  background-size: 200% auto;
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: gradientShift 3s ease-in-out infinite;
}
.gradient-text-scroll {
  background: linear-gradient(
    45deg,
    rgb(var(--color-accent-primary)),
    rgb(var(--color-accent-secondary)),
    rgb(var(--color-accent-primary))
  );
  background-size: 200% auto;
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-position: 0% 50%;
  transition: background-position 0.8s ease-in-out;
}
.gradient-text-scroll.animate {
  background-position: 100% 50%;
}

/* Text glow animations */
@keyframes text-glow {
  0%, 100% {
    text-shadow: 0 0 5px rgb(var(--color-accent-primary)),
      0 0 10px rgb(var(--color-accent-primary)),
      0 0 15px rgb(var(--color-accent-primary));
  }
  50% {
    text-shadow: 0 0 10px rgb(var(--color-accent-primary)),
      0 0 20px rgb(var(--color-accent-primary)),
      0 0 30px rgb(var(--color-accent-primary));
  }
}
@keyframes glowPurple {
  from { text-shadow: 0 0 20px #9c27b0, 0 0 30px #9c27b0, 0 0 40px #9c27b0; }
  to { text-shadow: 0 0 30px #9c27b0, 0 0 40px #9c27b0, 0 0 50px #9c27b0; }
}

.text-glow {
  animation: text-glow 2s ease-in-out infinite alternate;
}
.text-glow-scroll {
  text-shadow: 0 0 5px rgb(var(--color-accent-primary));
  transition: text-shadow 0.8s ease-in-out;
}
.text-glow-scroll.animate {
  text-shadow: 0 0 10px rgb(var(--color-accent-primary)),
    0 0 20px rgb(var(--color-accent-primary)),
    0 0 30px rgb(var(--color-accent-primary));
}

/* --- 4. Loading & Utility Animations --- */

/* Pulse effects */
@keyframes pulse { /* General pulse, slightly different from pulse-slow/pulseSubtle */
  0%, 100% { opacity: 0.5; transform: scale(0.99) translateZ(0); }
  50% { opacity: 1; transform: scale(1) translateZ(0); }
}
@keyframes pulseSubtle {
  0%, 100% { transform: scale(1); opacity: 1; }
  50% { transform: scale(1.02); opacity: 0.9; }
}
@keyframes pulse-slow {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.6; }
}
@keyframes pulseGlow { /* Specific for glowing pulse effect */
  0%, 100% {
    opacity: 1;
    transform: scale(1);
    box-shadow: 0 0 10px currentColor;
  }
  50% {
    opacity: 0.7;
    transform: scale(1.1);
    box-shadow: 0 0 20px currentColor;
  }
}

/* Spin effect */
@keyframes spin {
  from { transform: rotate(0deg) translateZ(0); }
  to { transform: rotate(360deg) translateZ(0); }
}

/* Shimmer effects */
@keyframes shimmer { /* Primary shimmer keyframe */
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}
@keyframes loading { /* Also a shimmer-like effect, could be merged into shimmer if parameters allow */
  0% { background-position: 200% 0; }
  100% { background-position: -200% 0; }
}

/* Twinkle effect */
@keyframes twinkle {
  0%, 100% { opacity: 0; transform: scale(0.8) rotate(0deg); }
  50% { opacity: 1; transform: scale(1.2) rotate(180deg); }
}

/* Bounce effects */
@keyframes bounceGentle {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-5px); }
}
@keyframes bounce { /* Full bounce animation */
  0%, 20%, 53%, 80%, 100% { transform: translate3d(0, 0, 0); }
  40%, 43% { transform: translate3d(0, -30px, 0); }
  70% { transform: translate3d(0, -15px, 0); }
  90% { transform: translate3d(0, -4px, 0); }
}
@keyframes bounceIn { /* In-effect bounce */
  0% { opacity: 0; transform: scale(0.3) translateZ(0); }
  50% { opacity: 1; transform: scale(1.05) translateZ(0); }
  70% { transform: scale(0.9) translateZ(0); }
  100% { opacity: 1; transform: scale(1) translateZ(0); }
}
@keyframes checkboxBounce { /* Smaller bounce for checkboxes */
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.2); }
}

/* Floating elements */
@keyframes floatAnim { /* Complex float from previous version */
  0%, 100% { transform: translateY(0px) rotate(0deg) translateZ(0); }
  33% { transform: translateY(-10px) rotate(120deg) translateZ(0); }
  66% { transform: translateY(5px) rotate(240deg) translateZ(0); }
}
@keyframes floatDelayed { /* Simpler float for delay */
  0%, 100% { transform: translateY(0px) translateZ(0); }
  50% { transform: translateY(-15px) translateZ(0); }
}
@keyframes floatRotate { /* Float with subtle rotation */
  0%, 100% { transform: translateY(0px) rotate(0deg) translateZ(0); }
  50% { transform: translateY(-10px) rotate(5deg) translateZ(0); }
}
@keyframes floatBgCircles { /* Specific float for background circles */
  0%, 100% { transform: translateY(0px) rotate(0deg); }
  50% { transform: translateY(-20px) rotate(2deg); }
}
@keyframes logoFloat { /* Small float for logos */
  0%, 100% { transform: translateY(0px) scale(1); }
  50% { transform: translateY(-5px) scale(1.02); }
}

/* Status Pulse */
@keyframes statusPulse {
  0%, 100% { transform: scale(1); opacity: 1; }
  50% { transform: scale(1.05); opacity: 0.8; }
}

/* Counter animation */
@keyframes counter {
  from { transform: scale(0.8); opacity: 0; }
  to { transform: scale(1); opacity: 1; }
}

/* Progress fill */
@keyframes progressFill {
  from { width: 0%; }
  to { width: var(--progress-width); }
}

/* General utility animation classes */
.pulse { animation: pulse 2s infinite ease-in-out; }
.spin { animation: spin 1.2s infinite linear; }

.animate-gradient-x {
  background-size: 200% 200%;
  animation: gradientX 3s ease infinite;
}
.animate-gradient-xy {
  background-size: 200% 200%;
  animation: gradientXY 8s ease infinite;
}
.animate-gradient-slow {
  background-size: 200% 200%;
  animation: gradientSlow 6s ease infinite;
}
.animate-gradient-shift { /* Re-used for some gradient text */
  animation: gradientShift 4s ease-in-out infinite;
}
.animate-pulse-slow {
  animation: pulse-slow 3s ease-in-out infinite;
}
.animate-shimmer {
  position: relative;
  overflow: hidden;
  animation: shimmer 2s linear infinite; /* Direct use of shimmer */
}
.animate-shimmer::before { /* For background shimmer effect */
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
  animation: shimmer 2s infinite;
}
.animate-shimmer-slow {
  position: relative;
  overflow: hidden;
}
.animate-shimmer-slow::before { /* For background shimmer effect (slower) */
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  animation: shimmer 4s infinite;
}
.animate-twinkle {
  animation: twinkle 2s ease-in-out infinite;
}

.shimmer { /* Direct shimmer background for elements */
  background: linear-gradient(
    90deg,
    rgb(var(--color-background-secondary)) 25%,
    rgb(var(--color-accent-neutral)) 50%,
    rgb(var(--color-background-secondary)) 75%
  );
  background-size: 200% 100%;
  animation: shimmer 2s infinite linear;
}

.loading-skeleton {
  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
  background-size: 400% 100%;
  animation: loading 1.4s ease infinite;
}
.dark .loading-skeleton {
  background: linear-gradient(90deg, #2a2a2a 25%, #3a3a3a 50%, #2a2a2a 75%);
  background-size: 400% 100%;
}

.pulse-glow { animation: pulseGlow 2s ease-in-out infinite; }
.animate-status-pulse { animation: statusPulse 2s ease-in-out infinite; }
.animate-bounce-gentle { animation: bounceGentle 2s ease-in-out infinite; } /* Renamed from bounce-gentle to match general pattern */

/* Floating background circles (AtsTracker specific) */
.animate-float-bg-circles-normal { animation: floatBgCircles 6s ease-in-out infinite; }
.animate-float-bg-circles-reverse { animation: floatBgCircles 8s ease-in-out infinite reverse; }

/* --- 5. Hover and Focus Effects --- */

.hover-lift {
  transition: transform var(--transition-normal), box-shadow var(--transition-normal);
  will-change: transform, box-shadow;
}
.hover-lift:hover, .hover-lift:focus {
  transform: translateY(-4px) translateZ(0);
  box-shadow: var(--hover-shadow-light);
}
.dark .hover-lift:hover, .dark .hover-lift:focus {
  box-shadow: var(--hover-shadow-dark);
}

.hover-glow {
  transition: box-shadow var(--transition-normal), transform var(--transition-normal);
  will-change: transform, box-shadow;
}
.hover-glow:hover, .hover-glow:focus {
  box-shadow: 0 0 20px rgba(var(--color-accent-primary), 0.4);
  transform: translateY(-2px) translateZ(0);
}

.hover-scale {
  transition: transform var(--transition-normal);
  will-change: transform;
}
.hover-scale:hover, .hover-scale:focus {
  transform: scale(1.05) translateZ(0);
}

.hover-rotate {
  transition: transform var(--transition-normal);
  will-change: transform;
}
.hover-rotate:hover {
  transform: rotate(5deg) translateZ(0);
}

.hover-tilt {
  transition: transform var(--transition-normal);
  will-change: transform;
}
.hover-tilt:hover {
  transform: perspective(1000px) rotateX(10deg) rotateY(10deg) translateZ(0);
}

/* Enhanced shadow and glow effects */
.shadow-glow {
  box-shadow: 0 0 20px rgba(var(--color-accent-primary), 0.3);
}
.hover\:shadow-glow:hover { /* More specific glow for red/blue based on previous request */
  box-shadow:
    0 0 20px rgba(248, 113, 113, 0.3), /* Assuming this is intended for red glow */
    0 0 40px rgba(248, 113, 113, 0.1);
}

/* Form field hover animation */
.form-field-hover {
  transition: all 0.3s ease;
}
.form-field-hover:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
}

/* Input focus glow effect */
.input-glow:focus {
  box-shadow: 0 0 0 3px rgba(var(--color-accent-primary), 0.2),
    0 0 20px rgba(var(--color-accent-primary), 0.1);
}

/* --- 6. Feedback Animations --- */
@keyframes success-pulse {
  0% { box-shadow: 0 0 0 0 rgba(var(--color-accent-primary), 0.7); }
  70% { box-shadow: 0 0 0 15px rgba(var(--color-accent-primary), 0); }
  100% { box-shadow: 0 0 0 0 rgba(var(--color-accent-primary), 0); }
}
@keyframes error-shake {
  10%, 90% { transform: translate3d(-2px, 0, 0); }
  20%, 80% { transform: translate3d(4px, 0, 0); }
  30%, 50%, 70% { transform: translate3d(-6px, 0, 0); }
  40%, 60% { transform: translate3d(6px, 0, 0); }
}

.success-pulse { animation: success-pulse 2s ease-out; }
.error-shake { animation: error-shake 0.6s cubic-bezier(.36,.07,.19,.97) both; }

@keyframes successRipple {
  0% { transform: scale(0); opacity: 1; }
  100% { transform: scale(4); opacity: 0; }
}
.success-ripple::after {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: inherit;
  background: radial-gradient(circle, rgba(var(--color-accent-primary), 0.3) 0%, transparent 70%);
  animation: successRipple 0.6s ease-out;
}

/* --- 7. Micro-interactions & General Utility Animations --- */

@keyframes buttonClick {
  0% { transform: scale(1) translateZ(0); }
  50% { transform: scale(0.95) translateZ(0); }
  100% { transform: scale(1) translateZ(0); }
}
.button-click { animation: buttonClick 0.2s ease-in-out; }

/* General Fade and Slide animations - consolidate to common keyframes */
@keyframes fadeIn { /* Base fade in */
  from { opacity: 0; }
  to { opacity: 1; }
}
@keyframes fadeInUp { /* Base fade in up */
  from { opacity: 0; transform: translate3d(0, 30px, 0); }
  to { opacity: 1; transform: translate3d(0, 0, 0); }
}
@keyframes fadeInDown { /* Base fade in down */
  from { opacity: 0; transform: translateY(-30px); }
  to { opacity: 1; transform: translateY(0); }
}
@keyframes slideInLeft { /* Base slide in left */
  from { opacity: 0; transform: translateX(-30px); }
  to { opacity: 1; transform: translateX(0); }
}
@keyframes slideInRight { /* Base slide in right */
  from { opacity: 0; transform: translateX(30px); }
  to { opacity: 1; transform: translateX(0); }
}
@keyframes slideInUp { /* Base slide in up (same as fadeInUp, but kept for clarity if used differently) */
  from { opacity: 0; transform: translateY(30px); }
  to { opacity: 1; transform: translateY(0); }
}
@keyframes scaleIn { /* Base scale in */
  from { opacity: 0; transform: scale(0.9); }
  to { opacity: 1; transform: scale(1); }
}

/* Rotation animations */
@keyframes rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}
@keyframes rotateY {
  from { transform: rotateY(0deg); }
  to { transform: rotateY(360deg); }
}

/* Flip animations */
@keyframes flipInX {
  from { transform: perspective(400px) rotateX(90deg); opacity: 0; }
  40% { transform: perspective(400px) rotateX(-20deg); }
  60% { transform: perspective(400px) rotateX(10deg); opacity: 1; }
  80% { transform: perspective(400px) rotateX(-5deg); }
  to { transform: perspective(400px); opacity: 1; }
}
@keyframes flipInY {
  from { transform: perspective(400px) rotateY(90deg); opacity: 0; }
  40% { transform: perspective(400px) rotateY(-20deg); }
  60% { transform: perspective(400px) rotateY(10deg); opacity: 1; }
  80% { transform: perspective(400px) rotateY(-5deg); }
  to { transform: perspective(400px); opacity: 1; }
}

/* Modal specific animations */
@keyframes modalSlideIn {
  from { opacity: 0; transform: scale(0.9) translateY(-50px); }
  to { opacity: 1; transform: scale(1) translateY(0); }
}

/* Animation utility classes */
.fade-in { animation: fadeIn 0.6s ease-in-out; }
.animate-fadeIn { animation: fadeIn 0.6s ease-out forwards; }
.animate-fadeInUp { animation: fadeInUp 0.6s ease-out forwards; }
.animate-fadeInDown { animation: fadeInDown 0.6s ease-out forwards; }
.animate-slideInLeft { animation: slideInLeft 0.6s ease-out forwards; }
.animate-slideInRight { animation: slideInRight 0.6s ease-out forwards; }
.animate-slideInUp { animation: slideInUp 0.6s ease-out forwards; } /* project card */
.animate-slideInUp:nth-child(1) { animation-delay: 0.1s; }
.animate-slideInUp:nth-child(2) { animation-delay: 0.2s; }
.animate-slideInUp:nth-child(3) { animation-delay: 0.3s; }
.animate-slideInUp:nth-child(4) { animation-delay: 0.4s; }
.animate-slideInUp:nth-child(5) { animation-delay: 0.5s; }
.animate-slideInUp:nth-child(6) { animation-delay: 0.6s; }

.animate-scaleIn { animation: scaleIn 0.5s ease-out forwards; }
.animate-pulse { animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite; } /* General pulse */
.animate-pulse-subtle { animation: pulseSubtle 3s ease-in-out infinite; }
.animate-bounce { animation: bounce 1s infinite; }
.animate-bounceIn { animation: bounceIn 0.75s ease-out forwards; }
.animate-shake { animation: shake 0.5s ease-in-out; }
.animate-glow { animation: text-glow 2s ease-in-out infinite alternate; } /* Uses text-glow */
.animate-glow-purple { animation: glowPurple 2s ease-in-out infinite alternate; }
.animate-float { animation: floatAnim 3s ease-in-out infinite; } /* Uses floatAnim */
.animate-float-subtle { animation: floatDelayed 4s ease-in-out infinite; } /* Uses floatDelayed */
.animate-flip-x { animation: flipInX 0.8s ease-out forwards; }
.animate-flip-y { animation: flipInY 0.8s ease-out forwards; }
.animate-gradient-rotate { animation: gradientRotate 4s ease infinite; }
.animate-rotate { animation: rotate 1s linear infinite; }
.animate-rotate-y { animation: rotateY 2s ease-in-out infinite; }

.animate-modalSlideIn { animation: modalSlideIn 0.4s ease-out forwards; }
.animate-logo-float { animation: logoFloat 3s ease-in-out infinite; }
.checkbox-bounce:checked { animation: checkboxBounce 0.3s ease; }
.animate-counter { animation: counter 0.6s ease-out; }

/* --- 8. Card Animations --- */

@keyframes cardHover {
  from { transform: translateY(0) scale(1); box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1); }
  to { transform: translateY(-5px) scale(1.02); box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04); }
}
.card-hover {
  transition: transform var(--transition-normal), box-shadow var(--transition-normal),
    border-color var(--transition-normal);
  will-change: transform, box-shadow;
}
.card-hover:hover {
  transform: translateY(-6px) translateZ(0);
  box-shadow: 0 12px 40px rgba(var(--color-text-primary), 0.15);
  border-color: rgba(var(--color-accent-primary), 0.3);
}
.dark .card-hover:hover {
  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.4);
}

.card-tilt {
  transition: transform var(--transition-normal);
  will-change: transform;
}
.card-tilt:hover {
  transform: perspective(1000px) rotateX(5deg) rotateY(5deg) scale(1.02) translateZ(0);
}

.card-flip {
  perspective: 1000px;
}
.card-flip-inner {
  transition: transform 0.6s;
  transform-style: preserve-3d;
  will-change: transform;
}
.card-flip:hover .card-flip-inner {
  transform: rotateY(180deg);
}
.card-flip-front, .card-flip-back {
  backface-visibility: hidden;
}
.card-flip-back {
  transform: rotateY(180deg);
}

/* Component specific animations (certificates/experience cards use fadeInUp base) */
.certificate-card,
.experience-card {
  opacity: 0;
  transform: translateY(30px);
  animation: fadeInUp 0.6s ease forwards;
}
.certificate-card:nth-child(odd) { animation-delay: 0.1s; }
.certificate-card:nth-child(even) { animation-delay: 0.2s; }
.experience-card:nth-child(1) { animation-delay: 0.1s; }
.experience-card:nth-child(2) { animation-delay: 0.2s; }
.experience-card:nth-child(3) { animation-delay: 0.3s; }
.experience-card:nth-child(4) { animation-delay: 0.4s; }
.experience-card:nth-child(5) { animation-delay: 0.5s; }

/* --- 9. Morphing Animations --- */

.morph-circle-to-square {
  border-radius: 50%;
  transition: border-radius 0.8s var(--transition-spring);
}
.morph-circle-to-square.animate {
  border-radius: 0;
}
.morph-expand {
  transform: scale(0.8) translateZ(0);
  transition: transform 0.8s var(--transition-spring);
}
.morph-expand.animate {
  transform: scale(1) translateZ(0);
}

/* --- 10. Advanced Utility Classes --- */

.animate-on-scroll {
  opacity: 0;
  transform: translateY(20px); /* Initial state for elements that will slide up */
  transition: opacity 0.8s ease-out, transform 0.8s ease-out; /* Smooth transition properties */
  will-change: transform, opacity; /* Performance optimization */
}
.animate-on-scroll.visible { /* This is the class applied by JS for IO */
  opacity: 1 !important;
  transform: translate3d(0, 0, 0) !important;
}

.animate-on-scroll-once {
  transition: all 0.8s var(--transition-spring);
}
.animate-on-scroll-once.visible {
  opacity: 1 !important;
  transform: translate3d(0, 0, 0) !important;
}
.animate-on-scroll-once.animated {
  transition: none;
}

/* --- 11. Performance Classes --- */

.scroll-performance {
  backface-visibility: hidden;
  perspective: 1000px;
  will-change: transform;
}
.scroll-performance-auto {
  will-change: auto;
}

.animate-fadeIn,
.animate-fadeInUp,
.animate-fadeInDown,
.animate-slideInLeft,
.animate-slideInRight,
.animate-scaleIn,
.animate-bounceIn,
.animate-flip-x,
.animate-flip-y {
  will-change: transform, opacity;
}
.animate-pulse,
.animate-pulse-subtle,
.animate-bounce,
.animate-float, /* This now refers to .animate-float class which uses floatAnim keyframe */
.animate-float-subtle {
  will-change: transform;
}
.animate-gradient-shift,
.animate-gradient-rotate {
  will-change: background-position;
}
.animate-rotate,
.animate-rotate-y {
  will-change: transform;
}

/* --- 12. Scroll Progress Indicators --- */

.scroll-progress {
  position: fixed;
  top: 0;
  left: 0;
  width: 0%;
  height: 4px;
  background: linear-gradient(90deg, rgb(var(--color-accent-primary)), rgb(var(--color-accent-secondary)));
  transition: width 0.1s ease-out;
  z-index: 1000;
}
.scroll-progress-vertical {
  position: fixed;
  top: 0;
  right: 0;
  width: 4px;
  height: 0%;
  background: linear-gradient(180deg, rgb(var(--color-accent-primary)), rgb(var(--color-accent-secondary)));
  transition: height 0.1s ease-out;
  z-index: 1000;
}

/* --- 13. Intersection Observer Optimizations --- */
.intersection-observer {
  contain: layout style paint;
}

/* --- 14. Enhanced Transition Utilities --- */
.transition-all-smooth {
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}
.ease-smooth {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

/* --- 15. Reduced Motion Support --- */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }

  .scroll-reveal,
  .scroll-reveal-left,
  .scroll-reveal-right,
  .scroll-reveal-scale,
  .scroll-reveal-rotate,
  .scroll-reveal-flip,
  .scroll-reveal-zoom,
  .animate-on-scroll,
  .animate-on-scroll-once {
    transition: opacity 0.3s ease-in-out;
    transform: none !important;
  }

  .float,
  .float-delayed,
  .float-rotate,
  .animate-float,
  .animate-bounce-gentle {
    animation: none;
  }

  .gradient-text,
  .text-glow,
  .pulse,
  .spin,
  .shimmer,
  .animate-gradient-x,
  .animate-gradient-xy,
  .animate-gradient-slow,
  .animate-pulse-slow,
  .animate-shimmer,
  .animate-shimmer-slow,
  .animate-twinkle {
    animation: none;
  }
}